buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.github.dnault:xml-patch:0.1.0"
    }
}

import com.github.dnault.xmlpatch.filter.XmlPatch
import com.github.dnault.xmlpatch.filter.multi.XmlMultiPatch
import com.github.dnault.xmlpatch.filter.multi.XmlPatchSpec

apply plugin: 'java'

ext {
    patchDir = "config/xml-patches"
}

// Copy a directory, selectively applying a single-target patch.
//
// Use this single-target technique if you're only patching a few documents
// and don't require multi-patch composition.
//
task singleTargetPatchExample(type: Copy) {
    def patchFile = "${patchDir}/example-patch.xml"

    inputs.file patchFile

    from "src/main/example-documents"
    into "${buildDir}/patched"

    // Use one 'filesMatching' statement for each file you want to patch.
    filesMatching("**/patch-me.xml") {
        // Single-target patches use the 'XmlPatch' filter
        filter(XmlPatch, patch: patchFile)
    }
}


// Augment the standard 'processResources' task to apply an XML multi-patch
// to classpath resources. The same technique could be applied to the 'war' task
// to patch webapp documents.
//
// Use this multi-patch technique if you're patching many documents or want
// to take advantage of multi-patch composition.
//
processResources {
    // To apply a multi-patch, first create a patch specification.
    def resourcesPatch = new XmlPatchSpec("${patchDir}/resources-multi-patch.xml")

    // Specify the whole patch directory as an input in case the multi-patch includes
    // other patch files.
    inputs.dir patchDir

    filesMatching("**/*.xml") {
        // Multi-patches use the 'XMlMultiPatch' filter.
        // The filter will only process the file if the 'path' specified here
        // matches the 'file' attribute of a <diff> in the multi-patch document.
        filter(XmlMultiPatch, spec: resourcesPatch, path: it.path)
    }

    // Optionally assert that each file targeted by the patch was seen by the filter.
    doLast {
        resourcesPatch.done()
    }
}
